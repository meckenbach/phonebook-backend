{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","create","newPerson","post","update","id","put","del","delete","Filter","onFilterInput","filterValue","onChange","value","PersonForm","onNameInput","onNumberInput","onAddPerson","nameValue","numberValue","onClick","type","Persons","persons","filter","onDeletePerson","person","name","startsWith","map","number","Person","SuccessNotification","message","className","ErrorNotification","App","useState","setPersons","useEffect","initialPersons","newName","setNewName","newNumber","setNewNumber","setFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","event","preventDefault","target","duplicatePerson","find","window","confirm","updatedPerson","setTimeout","catch","err","error","createdPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ee8807b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = (newPerson) => {\n    return axios.post(baseUrl, newPerson).then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    return axios.put(`${baseUrl}/${id}`, newPerson).then(response => response.data)\n}\n\nconst del = (id) => {\n    return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nconst personService = {\n    getAll,\n    create,\n    update,\n    del\n}\n\nexport default personService","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([])\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  function handleAddPerson (event) {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    const duplicatePerson = persons.find(person => person.name === newName)\n\n    if (!duplicatePerson) {\n      personService\n        .create(newPerson)\n        .then(createdPerson => {\n          setPersons([...persons, createdPerson])\n          setNewName('')\n          setNewNumber('')\n\n          setSuccessMessage(`Added ${newName}`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 3000)\n        })\n        .catch(err => {\n          setErrorMessage(err.response.data.error)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000)\n        })\n      return\n    }\n\n    if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      personService\n        .update(duplicatePerson.id, newPerson)\n        .then(updatedPerson => {\n          setPersons([...persons.filter(person => person.name !== duplicatePerson.name), updatedPerson])\n          setNewName('')\n          setNewNumber('')\n\n          setSuccessMessage(`Updated ${newName}`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 3000)\n        })\n        .catch (err => {\n          setErrorMessage(err.response.data.error)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000)\n        })\n        \n    } \n  }\n\n  function handleDelete (id, name) {\n    return (event) => {\n      event.preventDefault()\n\n      if (window.confirm(`Delete ${name}?`)) {\n        personService\n          .del(id)\n          .then(() => {\n            setPersons([...persons.filter(person => person.id !== id)])\n          })\n          \n      }\n    }\n  }\n\n  const [ newName, setNewName ] = useState('')\n\n  function handleNameInput (event) {\n    event.preventDefault()\n\n    setNewName(event.target.value)\n  }\n\n  const [ newNumber, setNewNumber] = useState('')\n\n  function handleNumberInput (event) {\n    event.preventDefault()\n\n    setNewNumber(event.target.value)\n  }\n\n  const [ filter, setFilter] = useState('')\n\n  function handleFilterInput (event) {\n    event.preventDefault()\n\n    setFilter(event.target.value)\n  }\n\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      <Filter onFilterInput={handleFilterInput} filterValue={filter} />\n      <h3>add a new</h3>\n      <PersonForm\n        onNameInput={handleNameInput}\n        nameValue={newName}\n        onNumberInput={handleNumberInput}\n        numberValue={newNumber}\n        onAddPerson={handleAddPerson}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={filter} onDeletePerson={handleDelete} />\n    </div>\n  )\n}\n\nconst Filter = ({onFilterInput, filterValue}) => {\n  return (\n    <div>\n      filter shown with <input onChange={onFilterInput} value={filterValue} />\n    </div>\n  )\n}\n\nconst PersonForm = ({onNameInput, onNumberInput, onAddPerson, nameValue, numberValue}) => {\n  return (\n    <form>\n      <div>\n        name: <input onChange={onNameInput} value={nameValue} />\n      </div>\n      <div>\n        number: <input onChange={onNumberInput} value={numberValue} />\n      </div>\n      <div>\n        <button onClick={onAddPerson} type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({persons, filter, onDeletePerson}) => {\n  persons = persons\n    .filter(person => person.name.startsWith(filter))\n    .map(person => <Person name={person.name} number={person.number} id={person.id} key={person.id} onDeletePerson={onDeletePerson} />)\n  \n    return <div>{persons}</div>\n}\n\nconst Person = ({name, number, id, onDeletePerson}) => {\n  return (\n    <div>{name}Â {number} <button onClick={onDeletePerson(id, name)}>delete</button></div>\n  )\n}\n\nconst SuccessNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}